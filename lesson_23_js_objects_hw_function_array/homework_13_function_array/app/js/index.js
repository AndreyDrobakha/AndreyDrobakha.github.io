"use strict";

;

(function () {
  'use strict';

  var map = function map(fn, arr) {
    var resArr = [];

    for (var i = 0; i < arr.length; i++) {
      resArr.push(fn(arr[i]));
    }

    return resArr;
  };

  var radiuses = [1, 3, 5, 7, 9];

  function getSquareRound(radius) {
    var pi = 3.14;
    return Math.round(pi * Math.pow(radius, 2));
  } // ищем площадь круга


  console.log(map(getSquareRound, radiuses));
  console.log(radiuses);
})();

function User(name, role) {
  this.name = name;
  this.role = role;
}

User.prototype.getName = function () {
  return this.name;
};

var user_1 = new User('Seriy', 'admin');
var name = user_1.getName();

for (var key in user_1) {
  if (!user_1.hasOwnProperty(key)) {
    continue;
  }

  console.log(key);
}

var salaries = {
  "Вася": 400,
  "Петя": 300,
  "Даша": 350
};

var getSalariesSum = function getSalariesSum(obj) {
  var sum = 0;

  for (var _name in obj) {
    sum += obj[_name];
  }

  return sum;
};

var result = getSalariesSum(salaries);
console.log(result);

var showReachest = function showReachest(obj) {
  var reachBitch = 'нет сотрудников';
  var num = 0;

  for (var _name2 in obj) {
    if (obj[_name2] > num) {
      num = obj[_name2];
      reachBitch = _name2;
    }
  }

  return reachBitch;
};

var reachest = showReachest(salaries);
console.log(reachest);
console.log(map(squareRound, [])); // []

var arr = [];

for (var i = 0; i <= 20; i++) {
  arr.push(i);
}

console.log(arr.sort(function (a, b) {
  return a < b;
}));
var a = {
  value: 2,
  toString: function toString() {
    return ++this.value;
  }
};

if (a == 3 && a == 4) {
  console.log('I like JS!!!');
}

function smoothScrolling(queries) {
  var sections = document.getElementsByTagName(queries);
  sections.forEach = [].forEach;
  var sectionsCollection = [];
  sections.forEach(function (el) {
    sectionsCollection.push(el.offsetTop);
  });
  var current = 0;
  var elem = document.body;

  if (elem.addEventListener) {
    if ('onwheel' in document) {
      elem.addEventListener("wheel", onWheel);
    } else if ('onmousewheel' in document) {
      elem.addEventListener("mousewheel", onWheel);
    } else {
      elem.addEventListener("MozMousePixelScroll", onWheel);
    }
  } else {
    elem.attachEvent("onmousewheel", onWheel);
  }

  function onWheel(e) {
    e = e || window.event;
    var delta = e.deltaY || e.detail || e.wheelDelta;
    e.preventDefault ? e.preventDefault() : e.returnValue = false;
    current = current < 0 ? 0 : current;

    if (delta >= 0) {
      current = current >= sectionsCollection.length - 1 ? current : current + 1;
    } else {
      current -= 1;
    }

    window.scrollTo({
      top: sectionsCollection[current],
      behavior: 'smooth'
    });
  }
}

smoothScrolling('section');
var form = document.forms['myForm'].elements;
console.log(form);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
