"use strict";!function(){var e=document.createElement("div");e.style.border="2px solid white",e.style.margin="2em",e.style.padding="2em";var t=document.createElement("h3"),n=document.createElement("form"),i=document.createElement("input");i.setAttribute("type","text");var l=document.createElement("input");l.setAttribute("type","text");var r=document.createElement("input");r.setAttribute("type","submit"),r.setAttribute("value","Go!");var o=document.createElement("div");t.innerText="Введите два числа",t.style.fontSize="2em",t.style.textAlign="center",t.style.marginBottom="1em",n.style.textAlign="center",n.style.margin="auto",n.style.marginBottom="2em",i.style.fontSize="2em",l.style.fontSize="2em",i.style.textAlign="center",l.style.textAlign="center",r.style.fontSize="2em",o.style.fontSize="2em",o.style.fontWeight="bold",o.style.color="green",o.style.textAlign="center",o.style.marginBottom="1em",o.innerText="Здесь будет результат!",n.appendChild(i),n.appendChild(l),n.appendChild(r),e.appendChild(t),e.appendChild(n),e.appendChild(o),document.body.appendChild(e),n.onsubmit=function(e){e.preventDefault();var t=+i.value,n=+l.value;o.innerText=function(e,t){var n=[];e:for(var i=e;i<t;i++)for(var l=2;l<i;l++){if(i%l==0)continue e;n.indexOf(i)<0&&n.push(i)}return n.join(", ")}(t,n)}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
